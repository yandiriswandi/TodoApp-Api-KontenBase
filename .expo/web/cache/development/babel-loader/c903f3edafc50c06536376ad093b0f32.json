{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Header from \"./src/components/Header\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      todoItem = _useState2[0],\n      setTodoItem = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      todoList = _useState4[0],\n      setTodoList = _useState4[1];\n\n  var addTodoList = function addTodoList() {\n    setTodoList([].concat(_toConsumableArray(todoList), [todoItem]));\n    console.log(todoList);\n  };\n\n  useEffect(function () {\n    fetchData();\n  }, []);\n\n  var fetchData = function fetchData() {\n    axios.get('https://api.kontenbase.com/query/api/v1/5ad2e50c-b9dc-48a9-a743-4229807ee0ef/todos').then(function (res) {\n      console.log(res.data);\n    }).catch(function (err) {\n      console.log('error', err);\n    });\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(Header, {\n      title: \"To-Do List\"\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        children: [_jsx(TextInput, {\n          placeholder: \"Enter To-Do item\",\n          style: styles.textInput,\n          onChangeText: function onChangeText(text) {\n            return setTodoItem(text);\n          },\n          value: todoItem\n        }), _jsx(Button, {\n          title: \"Add To-Do\",\n          onPress: addTodoList\n        })]\n      }), _jsx(ScrollView, {\n        children: todoList.map(function (todo) {\n          return _jsx(View, {\n            style: styles.todoItem,\n            children: _jsx(Text, {\n              style: {\n                textAlign: 'center'\n              },\n              children: todo\n            }, todo)\n          });\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 60\n  },\n  textInput: {\n    padding: 10,\n    borderColor: '#000000',\n    marginBottom: 10,\n    borderWidth: 1\n  },\n  todoItem: {\n    marginTop: 10,\n    padding: 20,\n    backgroundColor: '#f2f2f2',\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: 'gray'\n  }\n});","map":{"version":3,"sources":["/Users/david/Documents/TUGAS BOOTCAMP/TODOSELTODOS tanpa db/App.js"],"names":["React","useState","useEffect","Header","axios","App","todoItem","setTodoItem","todoList","setTodoList","addTodoList","console","log","fetchData","get","then","res","data","catch","err","styles","container","textInput","text","map","todo","textAlign","StyleSheet","create","padding","borderColor","marginBottom","borderWidth","marginTop","backgroundColor","borderRadius"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;AASA,OAAOC,MAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAAgCJ,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOK,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAgCN,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOO,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBD,IAAAA,WAAW,8BAAKD,QAAL,IAAeF,QAAf,GAAX;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACD,GAHD;;AAKAN,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBT,IAAAA,KAAK,CACFU,GADH,CAEI,oFAFJ,EAIGC,IAJH,CAIQ,UAACC,GAAD,EAAS;AAEbL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACC,IAAhB;AACD,KAPH,EAQGC,KARH,CAQS,UAACC,GAAD,EAAS;AACdR,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBO,GAArB;AACD,KAVH;AAWD,GAZD;;AAcA,SACE,MAAC,IAAD;AAAA,eACE,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC;AAAd,MADF,EAEE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,iBACE,MAAC,IAAD;AAAA,mBACE,KAAC,SAAD;AACE,UAAA,WAAW,EAAC,kBADd;AAEE,UAAA,KAAK,EAAED,MAAM,CAACE,SAFhB;AAGE,UAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,mBAAUhB,WAAW,CAACgB,IAAD,CAArB;AAAA,WAHhB;AAIE,UAAA,KAAK,EAAEjB;AAJT,UADF,EAOE,KAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,WAAd;AAA0B,UAAA,OAAO,EAAEI;AAAnC,UAPF;AAAA,QADF,EAUE,KAAC,UAAD;AAAA,kBACGF,QAAQ,CAACgB,GAAT,CAAa,UAACC,IAAD;AAAA,iBACZ,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEL,MAAM,CAACd,QAApB;AAAA,sBACE,KAAC,IAAD;AAAiB,cAAA,KAAK,EAAE;AAAEoB,gBAAAA,SAAS,EAAE;AAAb,eAAxB;AAAA,wBACGD;AADH,eAAWA,IAAX;AADF,YADY;AAAA,SAAb;AADH,QAVF;AAAA,MAFF;AAAA,IADF;AAyBD;AAED,IAAML,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,OAAO,EAAE;AADA,GADoB;AAI/BP,EAAAA,SAAS,EAAE;AACTO,IAAAA,OAAO,EAAE,EADA;AAETC,IAAAA,WAAW,EAAE,SAFJ;AAGTC,IAAAA,YAAY,EAAE,EAHL;AAITC,IAAAA,WAAW,EAAE;AAJJ,GAJoB;AAU/B1B,EAAAA,QAAQ,EAAE;AACR2B,IAAAA,SAAS,EAAE,EADH;AAERJ,IAAAA,OAAO,EAAE,EAFD;AAGRK,IAAAA,eAAe,EAAE,SAHT;AAIRC,IAAAA,YAAY,EAAE,EAJN;AAKRH,IAAAA,WAAW,EAAE,CALL;AAMRF,IAAAA,WAAW,EAAE;AANL;AAVqB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  Button,\n  ScrollView,\n} from 'react-native';\nimport Header from './src/components/Header';\nimport axios from 'axios';\n\nexport default function App() {\n  const [todoItem, setTodoItem] = useState('');\n  const [todoList, setTodoList] = useState([]);\n\n  const addTodoList = () => {\n    setTodoList([...todoList, todoItem]);\n    console.log(todoList);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = () => {\n    axios\n      .get(\n        'https://api.kontenbase.com/query/api/v1/5ad2e50c-b9dc-48a9-a743-4229807ee0ef/todos'\n      )\n      .then((res) => {\n        // setTodoList(res.data);\n        console.log(res.data);\n      })\n      .catch((err) => {\n        console.log('error', err);\n      });\n  };\n\n  return (\n    <View>\n      <Header title=\"To-Do List\" />\n      <View style={styles.container}>\n        <View>\n          <TextInput\n            placeholder=\"Enter To-Do item\"\n            style={styles.textInput}\n            onChangeText={(text) => setTodoItem(text)}\n            value={todoItem}\n          />\n          <Button title=\"Add To-Do\" onPress={addTodoList} />\n        </View>\n        <ScrollView>\n          {todoList.map((todo) => (\n            <View style={styles.todoItem}>\n              <Text key={todo} style={{ textAlign: 'center' }}>\n                {todo}\n              </Text>\n            </View>\n          ))}\n        </ScrollView>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 60,\n  },\n  textInput: {\n    padding: 10,\n    borderColor: '#000000',\n    marginBottom: 10,\n    borderWidth: 1,\n  },\n  todoItem: {\n    marginTop: 10,\n    padding: 20,\n    backgroundColor: '#f2f2f2',\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: 'gray',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}